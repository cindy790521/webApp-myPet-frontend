{"ast":null,"code":"var _jsxFileName = \"/Users/lintsaiju/Documents/5610/TsaijuLin-FinalProject-myPet-frontend/src/components/Records.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport { BsFillPencilFill, BsFillPlusCircleFill } from \"react-icons/bs\";\nimport \"./Records.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Records = _ref => {\n  let {\n    user,\n    records,\n    setRecords,\n    recordList,\n    setRecordList,\n    currentPage,\n    setCurrentPage,\n    entriesPerPage,\n    totalResults,\n    setEntriesPerPage,\n    getRecords,\n    setTotalResults\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/records/edit\",\n          children: [/*#__PURE__*/_jsxDEV(BsFillPlusCircleFill, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), \" Add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"movieRow\",\n        children: records.map(record => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"moviesListCard\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: record.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    className: \"movieRow\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Food(g)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Water(ml)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Poop(times)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Walk(mins)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Vaccine(yes/no)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Medicine(yes/no)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Grooming(yes/no)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Other\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"movieRow\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: [record.food, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 46\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: [record.water, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: record.poop\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: record.water\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: record.vaccine\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: record.medicine\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: record.grooming\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: record.other\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/records/edit\",\n                  state: {\n                    currentRecord: record\n                  },\n                  children: /*#__PURE__*/_jsxDEV(BsFillPencilFill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, record._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), currentPage != 0 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        onClick: () => {\n          setCurrentPage(currentPage - 1);\n        },\n        children: [\"Get previous \", entriesPerPage, \" results\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 34\n      }, this), \"Showing page:\", currentPage + 1, \".\", entriesPerPage * (currentPage + 1) < totalResults && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        onClick: () => {\n          setCurrentPage(currentPage + 1);\n        },\n        children: [\"Get next \", entriesPerPage, \" results\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Records;\nexport default Records;\n\nvar _c;\n\n$RefreshReg$(_c, \"Records\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","Button","Col","Row","Container","Card","BsFillPencilFill","BsFillPlusCircleFill","Records","user","records","setRecords","recordList","setRecordList","currentPage","setCurrentPage","entriesPerPage","totalResults","setEntriesPerPage","getRecords","setTotalResults","map","record","date","food","water","poop","vaccine","medicine","grooming","other","currentRecord","_id"],"sources":["/Users/lintsaiju/Documents/5610/TsaijuLin-FinalProject-myPet-frontend/src/components/Records.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport { BsFillPencilFill, BsFillPlusCircleFill } from \"react-icons/bs\";\nimport \"./Records.css\";\n\n\nconst Records = ({\n    user,\n    records,\n    setRecords,\n    recordList,\n    setRecordList,\n    currentPage,\n    setCurrentPage,\n    entriesPerPage,\n    totalResults,\n    setEntriesPerPage,\n    getRecords,\n    setTotalResults\n}) => {\n    \n    return (\n        <div className=\"App\">\n            <Container className=\"main-container\">\n                <Row>\n                    < Link to={\"/records/edit\"} >\n                        <BsFillPlusCircleFill/> Add\n                    </Link>\n                    \n                </Row>\n                <Row className=\"movieRow\">\n\n                    {records.map((record) => {\n                        return (\n                            <Col key={record._id}>\n                                <Card className=\"moviesListCard\">\n                                    <Card.Body>\n                                        <Card.Title>{record.date}</Card.Title>\n                                        <Card.Text>\n                                            <Row className={\"movieRow\"}>\n                                                <Col>\n                                            Food(g)\n                                            </Col>\n                                            <Col>Water(ml)</Col>\n                                            <Col>Poop(times)</Col>\n                                            <Col>Walk(mins)</Col>\n                                            <Col>Vaccine(yes/no)</Col>\n                                            <Col>Medicine(yes/no)</Col>\n                                            <Col>Grooming(yes/no)</Col>\n                                            <Col>Other</Col>\n                                            </Row>\n                                            <Row className={\"movieRow\"}>\n                                             <Col>{record.food} </Col>\n                                            <Col>{record.water} </Col>\n                                            <Col>{record.poop}</Col>\n                                            <Col>{record.water}</Col>\n                                            <Col>{record.vaccine}</Col>\n                                            <Col>{record.medicine}</Col>\n                                            <Col>{record.grooming}</Col>\n                                            <Col>{record.other}</Col>\n                                            </Row>\n                                        </Card.Text>\n                                        {/* <Card.Text>\n                                            Water:{record.water} ml\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Poop:{record.poop} times\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Walk:{record.water} mins\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Vaccine:{record.vaccine}\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Medicine:{record.medicine}\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Grooming:{record.grooming}\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Other:{record.other}\n                                        </Card.Text> */}\n\n                                        <Link to={\"/records/edit\"} state={{ currentRecord: record }}>\n                                            \n                                            <BsFillPencilFill/>\n                                        </Link>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n\n                        )\n                    })}\n                </Row>\n                <br />\n                {currentPage!=0&&<Button\n                    variant=\"link\"\n                    onClick={() => { setCurrentPage(currentPage - 1) }}\n                >\n                    Get previous {entriesPerPage} results\n                </Button>}\n                \n                Showing page:{currentPage + 1}.\n                {entriesPerPage*(currentPage + 1)<totalResults&&<Button\n                    variant=\"link\"\n                    onClick={() => { setCurrentPage(currentPage + 1) }}\n                >\n                    Get next {entriesPerPage} results\n                </Button>}\n            </Container>\n        </div>\n    )\n}\n\n\nexport default Records;"],"mappings":"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"},"metadata":{},"sourceType":"module"}