{"ast":null,"code":"var _jsxFileName = \"/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport { useCallback, useState, useEffect } from 'react';\nimport { DnDCard } from './DnDCard.js';\nimport MovieDataService from \"../services/movies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 400\n};\nexport const Container = _ref => {\n  _s();\n\n  let {\n    uploadFavorites,\n    favorites\n  } = _ref;\n\n  const getMovies = ids => {\n    //TODO\n    MovieDataService.getFavoritesMovies(ids).then(response => {\n      return response.data;\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    let favoritesMovies = getMovies(favorites);\n    setCards(favoritesMovies);\n  }, []);\n  useEffect(() => {\n    let favoritesMovies = getMovies(favorites);\n    setCards(favoritesMovies);\n  }, [favorites]);\n  useEffect(() => {\n    let i;\n    let newFavIds = [];\n\n    for (i = 0; i < cards.length; i++) {\n      newFavIds.push(cards[i]._id);\n    }\n\n    uploadFavorites(newFavIds);\n  }, [cards]);\n  const [cards, setCards] = useState([]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n  }, []);\n  const renderCard = useCallback((card, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      index: index,\n      id: card.id,\n      text: card.text,\n      moveCard: moveCard\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }, []); // return (\n  //   <>\n  //     <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n  //   </>\n  // )\n};\n\n_s(Container, \"OBxOmo7/qWDVSLVTNEb14Aqvdkk=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","useCallback","useState","useEffect","DnDCard","MovieDataService","style","width","Container","uploadFavorites","favorites","getMovies","ids","getFavoritesMovies","then","response","data","catch","e","console","log","favoritesMovies","setCards","i","newFavIds","cards","length","push","_id","moveCard","dragIndex","hoverIndex","prevCards","$splice","renderCard","card","index","id","text"],"sources":["/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport { useCallback, useState, useEffect } from 'react'\nimport  {DnDCard}  from './DnDCard.js'\nimport MovieDataService from \"../services/movies\";\n\nconst style = {\n  width: 400,\n};\nexport const Container = ({uploadFavorites,favorites}) => {\n  \n    const getMovies=ids=>{\n      //TODO\n      MovieDataService.getFavoritesMovies(ids)\n      .then(response=>{\n          return (response.data);\n      })\n      .catch(e=>{\n          console.log(e);\n      });\n\n  }\n  \n  useEffect(() => {\n    let favoritesMovies=getMovies(favorites);\n    setCards(favoritesMovies)\n  },[]);\n\n  useEffect(() => {\n    let favoritesMovies=getMovies(favorites);\n    setCards(favoritesMovies)\n  },[favorites]);\n\n  useEffect(() => {\n    let i;\n    let newFavIds=[];\n    for(i=0;i<cards.length;i++){\n      newFavIds.push(cards[i]._id);\n    }\n    uploadFavorites(newFavIds);\n  },[cards]);\n    \n    const [cards, setCards] = useState([]);\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards((prevCards) =>\n        update(prevCards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, prevCards[dragIndex]],\n          ],\n        }),\n      )\n    }, [])\n    const renderCard = useCallback((card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          moveCard={moveCard}\n        />\n      )\n    }, [])\n\n    // return (\n    //   <>\n    //     <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n    //   </>\n    // )\n    \n}"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE;AADK,CAAd;AAGA,OAAO,MAAMC,SAAS,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAACC,eAAD;IAAiBC;EAAjB,CAAgC;;EAEtD,MAAMC,SAAS,GAACC,GAAG,IAAE;IACnB;IACAP,gBAAgB,CAACQ,kBAAjB,CAAoCD,GAApC,EACCE,IADD,CACMC,QAAQ,IAAE;MACZ,OAAQA,QAAQ,CAACC,IAAjB;IACH,CAHD,EAICC,KAJD,CAIOC,CAAC,IAAE;MACNC,OAAO,CAACC,GAAR,CAAYF,CAAZ;IACH,CAND;EAQH,CAVC;;EAYFf,SAAS,CAAC,MAAM;IACd,IAAIkB,eAAe,GAACV,SAAS,CAACD,SAAD,CAA7B;IACAY,QAAQ,CAACD,eAAD,CAAR;EACD,CAHQ,EAGP,EAHO,CAAT;EAKAlB,SAAS,CAAC,MAAM;IACd,IAAIkB,eAAe,GAACV,SAAS,CAACD,SAAD,CAA7B;IACAY,QAAQ,CAACD,eAAD,CAAR;EACD,CAHQ,EAGP,CAACX,SAAD,CAHO,CAAT;EAKAP,SAAS,CAAC,MAAM;IACd,IAAIoB,CAAJ;IACA,IAAIC,SAAS,GAAC,EAAd;;IACA,KAAID,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACE,KAAK,CAACC,MAAhB,EAAuBH,CAAC,EAAxB,EAA2B;MACzBC,SAAS,CAACG,IAAV,CAAeF,KAAK,CAACF,CAAD,CAAL,CAASK,GAAxB;IACD;;IACDnB,eAAe,CAACe,SAAD,CAAf;EACD,CAPQ,EAOP,CAACC,KAAD,CAPO,CAAT;EASE,MAAM,CAACA,KAAD,EAAQH,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM2B,QAAQ,GAAG5B,WAAW,CAAC,CAAC6B,SAAD,EAAYC,UAAZ,KAA2B;IACtDT,QAAQ,CAAEU,SAAD,IACPhC,MAAM,CAACgC,SAAD,EAAY;MAChBC,OAAO,EAAE,CACP,CAACH,SAAD,EAAY,CAAZ,CADO,EAEP,CAACC,UAAD,EAAa,CAAb,EAAgBC,SAAS,CAACF,SAAD,CAAzB,CAFO;IADO,CAAZ,CADA,CAAR;EAQD,CAT2B,EASzB,EATyB,CAA5B;EAUA,MAAMI,UAAU,GAAGjC,WAAW,CAAC,CAACkC,IAAD,EAAOC,KAAP,KAAiB;IAC9C,oBACE,QAAC,IAAD;MAEE,KAAK,EAAEA,KAFT;MAGE,EAAE,EAAED,IAAI,CAACE,EAHX;MAIE,IAAI,EAAEF,IAAI,CAACG,IAJb;MAKE,QAAQ,EAAET;IALZ,GACOM,IAAI,CAACE,EADZ;MAAA;MAAA;MAAA;IAAA,QADF;EASD,CAV6B,EAU3B,EAV2B,CAA9B,CA5CsD,CAwDtD;EACA;EACA;EACA;EACA;AAEH,CA9DM;;GAAM7B,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}