{"ast":null,"code":"var _jsxFileName = \"/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport { useCallback, useState, useEffect } from 'react';\nimport { DnDCard } from './DnDCard.js';\nimport MovieDataService from \"../services/movies\";\nimport FavoriteDataService from \"./services/favorites\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 400\n};\nexport const Container = _ref => {\n  _s();\n\n  let {\n    user,\n    uploadFavorites\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const retreiveFavorites = useCallback(user => {\n    var data = {\n      user_id: user.googleId\n    };\n    FavoriteDataService.getFavorites(data.user_id).then(response => {\n      console.log(\"@@\");\n      setFavorites(response.data.favorites);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n\n  const getMovies = ids => {\n    //TODO\n    MovieDataService.getFavoritesMovies(ids.toString()).then(response => {\n      setCards(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"1\", favorites);\n    getMovies(favorites);\n  }, []);\n  useEffect(() => {\n    console.log(\"++\", favorites);\n    getMovies(favorites);\n  }, [favorites]);\n  useEffect(() => {\n    let i;\n    let newFavIds = [];\n\n    for (i = 0; i < cards.length; i++) {\n      newFavIds.push(cards[i]._id);\n    }\n\n    console.log(\"new\", newFavIds);\n    let data = {\n      _id: user.googleId,\n      favorites: newFavIds\n    };\n    uploadFavorites(data);\n  }, [cards]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n  }, []);\n  const renderCard = useCallback((card, index) => {\n    return /*#__PURE__*/_jsxDEV(DnDCard, {\n      index: index,\n      id: card._id,\n      text: card.title,\n      moveCard: moveCard\n    }, card._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), console.log(\"cards\", cards)]\n  }, void 0, true);\n};\n\n_s(Container, \"OE2C74qF466+utJKE6zqlZAgUVU=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","useCallback","useState","useEffect","DnDCard","MovieDataService","FavoriteDataService","style","width","Container","user","uploadFavorites","cards","setCards","favorites","setFavorites","retreiveFavorites","data","user_id","googleId","getFavorites","then","response","console","log","catch","e","getMovies","ids","getFavoritesMovies","toString","i","newFavIds","length","push","_id","moveCard","dragIndex","hoverIndex","prevCards","$splice","renderCard","card","index","title","map"],"sources":["/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport { useCallback, useState, useEffect } from 'react'\nimport  {DnDCard}  from './DnDCard.js'\nimport MovieDataService from \"../services/movies\";\nimport FavoriteDataService from \"./services/favorites\";\n\nconst style = {\n  width: 400,\n};\nexport const Container = ({user,uploadFavorites}) => {\n  \n    \n  const [cards, setCards] = useState([]);\n  const [favorites,setFavorites]=useState([]);\n  const retreiveFavorites=useCallback((user)=>{\n    var data={\n      user_id:user.googleId\n    }\n    \n    FavoriteDataService.getFavorites(data.user_id)\n    .then(response=>{\n      console.log(\"@@\");\n      setFavorites(response.data.favorites);\n    })\n    .catch(e=>{\n        console.log(e);\n    });\n  },[]);\n  const getMovies=ids=>{\n    //TODO\n    \n    MovieDataService.getFavoritesMovies(ids.toString())\n    .then(response=>{\n      setCards (response.data);\n    })\n    .catch(e=>{\n        console.log(e);\n    })\n}\n\n  useEffect(() => {\n    console.log(\"1\",favorites)\n    getMovies(favorites);\n  },[]);\n\n  useEffect(() => {\n    \n  console.log(\"++\",favorites) \n    getMovies(favorites);\n  },[favorites]);\n\n  useEffect(() => {\n    let i;\n    let newFavIds=[];\n    \n    for(i=0;i<cards.length;i++){\n      newFavIds.push(cards[i]._id);\n    }\n    console.log(\"new\",newFavIds);\n    let data={\n      _id:user.googleId,\n      favorites:newFavIds\n    };\n    uploadFavorites(data);\n  },[cards]);\n\n    \n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards((prevCards) =>\n        update(prevCards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, prevCards[dragIndex]],\n          ],\n        }),\n      )\n    }, [])\n    const renderCard = useCallback((card, index) => {\n      return (\n        <DnDCard\n          key={card._id}\n          index={index}\n          id={card._id}\n          text={card.title}\n          moveCard={moveCard}\n        />\n      )\n    }, []);\n\n    return (\n      <>\n        <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n         {console.log(\"cards\",cards)}\n      </>\n    )\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}