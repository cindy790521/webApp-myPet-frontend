{"ast":null,"code":"var _jsxFileName = \"/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MovieDataService from '../services/movies';\nimport { useNavigate, Link, useParams } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  let params = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    reviews: []\n  });\n  useEffect(() => {\n    const getMovie = id => {\n      //TODO\n      MovieDataService.getById(id).then(response => {\n        setMovie(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    getMovie(params.id);\n  }, [params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"bigPicture\",\n              src: movie.poster + \"/100px250\",\n              onError: e => {\n                e.target.onerror = null;\n                e.target.src = \"../images/NoPosterAvailable-crop.jpeg\";\n              },\n              fluid: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: movie.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), user && /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/movies/\" + params.id + \"/review\",\n                children: \"Add Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), movie.reviews.map((review, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink-0 reviewsText\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [review.name + \" reviewed on \", moment(review.date).format(\"Do MMMM YYYY\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"review\",\n                  children: review.review\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this), user && user.googleId === review.user_id && /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: {\n                        pathname: \"/movies/\" + params.id + \"/review\"\n                      },\n                      state: {\n                        currentReview: review\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      onClick: () => {\n                        //TODO:Implement delete behavior\n                        var data = {\n                          review: review,\n                          name: user.name,\n                          user_id: user.googleId,\n                          movie_id: params.id,\n                          review_id: review._id\n                        };\n                        MovieDataService.deleteReview(data).then(response => {\n                          setMovie(prevState => {\n                            prevState.reviews.splice(index, 1);\n                            return { ...prevState\n                            };\n                          });\n                          setMovie(movie);\n                          navigate(\"/movies/\" + params.id);\n                        }).catch(e => {\n                          console.log(e);\n                        });\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movie, \"tYZiy15raIwND8pzElDCucC/0nM=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","MovieDataService","useNavigate","Link","useParams","Card","Container","Image","Col","Row","Button","moment","Movie","user","params","navigate","movie","setMovie","id","title","rated","reviews","getMovie","getById","then","response","data","catch","e","console","log","poster","target","onerror","src","plot","map","review","index","name","date","format","googleId","user_id","pathname","currentReview","movie_id","review_id","_id","deleteReview","prevState","splice"],"sources":["/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Movie.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport MovieDataService from '../services/movies';\nimport {useNavigate,Link,useParams} from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\n\n\n\nconst Movie=({user})=>{\n\n    let params=useParams();\n    const navigate=useNavigate();\n    \n    const [movie,setMovie]=useState({\n        id:null,\n        title:\"\",\n        rated:\"\",\n        reviews:[]\n    });\n    \n    useEffect(()=>{\n        const getMovie=id=>{\n            //TODO\n            MovieDataService.getById(id)\n            .then(response=>{\n                setMovie(response.data);\n            })\n            .catch(e=>{\n                console.log(e);\n            });\n\n        }\n        getMovie(params.id)\n    },[params.id]);\n    \n    return(\n        \n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                    <div className=\"poster\">\n                        <Image\n                        className=\"bigPicture\"\n                        src={movie.poster+\"/100px250\"}\n                        onError={(e)=>{\n                            e.target.onerror = null; \n                            e.target.src=\"../images/NoPosterAvailable-crop.jpeg\"}}\n                        fluid />\n                    </div>\n                    </Col>\n                    <Col>\n                    <Card>\n                        <Card.Header as=\"h5\">{movie.title}</Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                {movie.plot}\n                            </Card.Text>\n                            {user &&\n                            <Link to={\"/movies/\"+params.id+\"/review\"}>\n                                Add Review\n                                </Link>}\n                        </Card.Body>\n                    </Card>\n                    <h2>Reviews</h2>\n                    <br></br>\n                    {movie.reviews.map((review,index)=>{\n                        return(\n                            <div className=\"d-flex\">\n                                <div className=\"flex-shrink-0 reviewsText\">\n                                    <h5>{review.name+\" reviewed on \"}{moment(review.date).format(\"Do MMMM YYYY\")}</h5>\n                                    <p className=\"review\">{review.review}</p>\n                                    {user && user.googleId===review.user_id &&\n                                    <Row>\n                                        <Col>\n                                        <Link to={{\n                                            pathname:\"/movies/\"+params.id+\"/review\"\n                                        }}\n                                        state={{\n                                            currentReview:review\n                                        }}\n                                        >\n                                            Edit\n                                        </Link>\n                                        </Col>\n                                        <Col>\n                                          <Button variant=\"link\" onClick={()=>\n                                        {\n                                            //TODO:Implement delete behavior\n                                            \n                                            var data={\n                                                review:review,\n                                                name:user.name,\n                                                user_id:user.googleId,\n                                                movie_id:params.id,\n                                                review_id:review._id\n                                            }\n                                            MovieDataService.deleteReview(data)\n                                            .then(response=>{\n                                                setMovie((prevState) => {\n                                                    prevState.reviews.splice(index, 1);\n                                                    return ({\n                                                      ...prevState\n                                                    })\n                                                  })\n                                                setMovie(movie);\n                                                navigate(\"/movies/\"+params.id);\n                                            })\n                                            .catch(e=>{\n                                                console.log(e);\n                                            });\n                                        }  \n                                        }>\n                                            Delete\n                                        </Button>\n                                        </Col>\n                                    </Row>\n                                    }\n                                </div>\n                            </div>\n                        )\n                    })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module"}