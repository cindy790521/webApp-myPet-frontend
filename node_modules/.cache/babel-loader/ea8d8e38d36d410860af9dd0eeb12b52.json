{"ast":null,"code":"var _jsxFileName = \"/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/AddReview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MovieDataService from \"../services/movies\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddReview = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const navigate = useNavigate();\n  let params = useParams();\n  let editing = false;\n  let initialReviewState = \"\";\n  let location = useLocation();\n  console.log(location.state.currentReview);\n  const [review, setReview] = useState(initialReviewState);\n\n  const onChangeReview = e => {\n    const review = e.target.value;\n    setReview(review);\n  };\n\n  const saveReview = () => {\n    var data = {\n      review: review,\n      name: user.name,\n      user_id: user.googleId,\n      movie_id: params.id\n    };\n\n    if (editing) {//TODO:Handle case where an existing review is being updated\n    } else {\n      MovieDataService.createReview(data).then(response => {\n        navigate(\"/movies/\" + params.id);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"main-container\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [editing ? \"Edit\" : \"Create\", \" Review\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          type: \"text\",\n          required: true,\n          review: review,\n          onChange: onChangeReview,\n          defaultValue: editing ? null : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        variant: \"primary\",\n        onClick: saveReview,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddReview, \"wI+YUBOhfioDixkoPvL1qSt/wNE=\", true, function () {\n  return [useNavigate, useParams];\n});\n\n_c = AddReview;\nexport default AddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"names":["React","useState","MovieDataService","useNavigate","useParams","Form","Button","Container","AddReview","user","navigate","params","editing","initialReviewState","location","useLocation","console","log","state","currentReview","review","setReview","onChangeReview","e","target","value","saveReview","data","name","user_id","googleId","movie_id","id","createReview","then","response","catch"],"sources":["/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/AddReview.js"],"sourcesContent":["import React,{useState} from 'react';\nimport MovieDataService from \"../services/movies\";\nimport {useNavigate,useParams} from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nconst AddReview=({user})=>{\n    const navigate=useNavigate();\n    let params=useParams();\n\n    let editing=false;\n    let initialReviewState=\"\";\n    let location=useLocation();\n    console.log(location.state.currentReview);\n\n\n\n    const [review,setReview]=useState(initialReviewState);\n\n    const onChangeReview=e=>{\n        const review=e.target.value;\n        setReview(review);\n    }\n\n    const saveReview=()=>{\n        var data={\n            review:review,\n            name:user.name,\n            user_id:user.googleId,\n            movie_id:params.id\n        }\n\n        if(editing){\n            //TODO:Handle case where an existing review is being updated\n\n        }else{\n            MovieDataService.createReview(data)\n            .then(response=>{\n                navigate(\"/movies/\"+params.id)\n            })\n            .catch(e=>{\n                console.log(e);\n            });\n        }\n    }\n\n    return(\n        <Container className=\"main-container\">\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>{editing?\"Edit\":\"Create\"} Review</Form.Label>\n                    <Form.Control\n                    as=\"textarea\"\n                    type=\"text\"\n                    required\n                    review={review}\n                    onChange={onChangeReview}\n                    defaultValue={editing?null:\"\"}\n                    />\n                </Form.Group>\n                <button variant=\"primary\" onClick={saveReview}>\n                    Submit\n                </button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default AddReview;\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,WAAR,EAAoBC,SAApB,QAAoC,kBAApC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEA,MAAMC,SAAS,GAAC,QAAU;EAAA;;EAAA,IAAT;IAACC;EAAD,CAAS;EACtB,MAAMC,QAAQ,GAACP,WAAW,EAA1B;EACA,IAAIQ,MAAM,GAACP,SAAS,EAApB;EAEA,IAAIQ,OAAO,GAAC,KAAZ;EACA,IAAIC,kBAAkB,GAAC,EAAvB;EACA,IAAIC,QAAQ,GAACC,WAAW,EAAxB;EACAC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,KAAT,CAAeC,aAA3B;EAIA,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBpB,QAAQ,CAACY,kBAAD,CAAjC;;EAEA,MAAMS,cAAc,GAACC,CAAC,IAAE;IACpB,MAAMH,MAAM,GAACG,CAAC,CAACC,MAAF,CAASC,KAAtB;IACAJ,SAAS,CAACD,MAAD,CAAT;EACH,CAHD;;EAKA,MAAMM,UAAU,GAAC,MAAI;IACjB,IAAIC,IAAI,GAAC;MACLP,MAAM,EAACA,MADF;MAELQ,IAAI,EAACnB,IAAI,CAACmB,IAFL;MAGLC,OAAO,EAACpB,IAAI,CAACqB,QAHR;MAILC,QAAQ,EAACpB,MAAM,CAACqB;IAJX,CAAT;;IAOA,IAAGpB,OAAH,EAAW,CACP;IAEH,CAHD,MAGK;MACDV,gBAAgB,CAAC+B,YAAjB,CAA8BN,IAA9B,EACCO,IADD,CACMC,QAAQ,IAAE;QACZzB,QAAQ,CAAC,aAAWC,MAAM,CAACqB,EAAnB,CAAR;MACH,CAHD,EAICI,KAJD,CAIOb,CAAC,IAAE;QACNP,OAAO,CAACC,GAAR,CAAYM,CAAZ;MACH,CAND;IAOH;EACJ,CApBD;;EAsBA,oBACI,QAAC,SAAD;IAAW,SAAS,EAAC,gBAArB;IAAA,uBACI,QAAC,IAAD;MAAA,wBACI,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAAA,wBACI,QAAC,IAAD,CAAM,KAAN;UAAA,WAAaX,OAAO,GAAC,MAAD,GAAQ,QAA5B;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;UACA,EAAE,EAAC,UADH;UAEA,IAAI,EAAC,MAFL;UAGA,QAAQ,MAHR;UAIA,MAAM,EAAEQ,MAJR;UAKA,QAAQ,EAAEE,cALV;UAMA,YAAY,EAAEV,OAAO,GAAC,IAAD,GAAM;QAN3B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAYI;QAAQ,OAAO,EAAC,SAAhB;QAA0B,OAAO,EAAEc,UAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,CA5DD;;GAAMlB,S;UACaL,W,EACJC,S;;;KAFTI,S;AA8DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}