{"ast":null,"code":"var _jsxFileName = \"/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/DnDContainer.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport { useCallback, useState, useEffect } from 'react';\nimport { DnDCard } from './DnDCard.js';\nimport MovieDataService from \"../services/movies\";\nimport FavoriteDataService from \"../services/favorites\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 600\n};\nexport const DnDContainer = _ref => {\n  _s();\n\n  let {\n    user,\n    favorites,\n    uploadFavorites,\n    retreiveFavorites\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const getMovies = useCallback(ids => {\n    MovieDataService.getFavoritesMovies(ids.toString()).then(response => {\n      console.log(\"gg\", favorites);\n      setCards(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n  useEffect(() => {\n    if (user) {\n      console.log(\"re\");\n      retreiveFavorites(user);\n    }\n\n    getMovies(favorites);\n  }, []);\n  useEffect(() => {\n    console.log(\"@@\", favorites);\n    getMovies(favorites);\n  }, [favorites]);\n  useEffect(() => {\n    if (user) {\n      let i;\n      let newFavIds = [];\n\n      for (i = 0; i < cards.length; i++) {\n        newFavIds.push(cards[i]._id);\n      }\n\n      console.log(\"new\", newFavIds);\n      let data = {\n        _id: user.googleId,\n        favorites: newFavIds\n      };\n      uploadFavorites(data);\n    }\n\n    console.log(\"fav\", favorites);\n    console.log(\"cards\", cards);\n  }, [cards]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n  }, []);\n  const renderCard = useCallback((card, index) => {\n    return /*#__PURE__*/_jsxDEV(DnDCard, {\n      index: index,\n      id: card._id,\n      poster: card.poster,\n      text: card.title,\n      moveCard: moveCard\n    }, card._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), console.log(\"qq\", cards)]\n  }, void 0, true);\n};\n\n_s(DnDContainer, \"5pVfCdvZy29pGhk7d7LkVTF6ghk=\");\n\n_c = DnDContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DnDContainer\");","map":{"version":3,"names":["update","useCallback","useState","useEffect","DnDCard","MovieDataService","FavoriteDataService","style","width","DnDContainer","user","favorites","uploadFavorites","retreiveFavorites","cards","setCards","getMovies","ids","getFavoritesMovies","toString","then","response","console","log","data","catch","e","i","newFavIds","length","push","_id","googleId","moveCard","dragIndex","hoverIndex","prevCards","$splice","renderCard","card","index","poster","title","map"],"sources":["/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/DnDContainer.js"],"sourcesContent":["import update from 'immutability-helper'\nimport { useCallback, useState, useEffect } from 'react'\nimport { DnDCard } from './DnDCard.js'\nimport MovieDataService from \"../services/movies\";\nimport FavoriteDataService from \"../services/favorites\";\n\nconst style = {\n  width: 600\n};\n\nexport const DnDContainer = ({ user, favorites, uploadFavorites, retreiveFavorites }) => {\n\n  const [cards, setCards] = useState([]);\n\n  const getMovies = useCallback((ids) => {\n    MovieDataService.getFavoritesMovies(ids.toString())\n      .then(response => {\n        console.log(\"gg\", favorites)\n        setCards(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      })\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      console.log(\"re\")\n      retreiveFavorites(user);\n    }\n    getMovies(favorites);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"@@\", favorites)\n    getMovies(favorites);\n  }, [favorites]);\n\n  useEffect(() => {\n    if (user) {\n      let i;\n      let newFavIds = [];\n      for (i = 0; i < cards.length; i++) {\n        newFavIds.push(cards[i]._id);\n      }\n      console.log(\"new\", newFavIds);\n      let data = {\n        _id: user.googleId,\n        favorites: newFavIds\n      };\n      uploadFavorites(data);\n    }\n    console.log(\"fav\", favorites)\n    console.log(\"cards\", cards)\n  }, [cards]);\n\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards((prevCards) =>\n      update(prevCards, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, prevCards[dragIndex]],\n        ],\n      }),\n    )\n  }, [])\n  const renderCard = useCallback((card, index) => {\n    return (\n      <DnDCard\n        key={card._id}\n        index={index}\n        id={card._id}\n        poster={card.poster}\n        text={card.title}\n        moveCard={moveCard}\n      />\n    )\n  }, []);\n\n  return (\n    <>\n      <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n      {console.log(\"qq\", cards)}\n    </>\n  )\n\n}"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;;AAEA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE;AADK,CAAd;AAIA,OAAO,MAAMC,YAAY,GAAG,QAA6D;EAAA;;EAAA,IAA5D;IAAEC,IAAF;IAAQC,SAAR;IAAmBC,eAAnB;IAAoCC;EAApC,CAA4D;EAEvF,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAMc,SAAS,GAAGf,WAAW,CAAEgB,GAAD,IAAS;IACrCZ,gBAAgB,CAACa,kBAAjB,CAAoCD,GAAG,CAACE,QAAJ,EAApC,EACGC,IADH,CACQC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBZ,SAAlB;MACAI,QAAQ,CAACM,QAAQ,CAACG,IAAV,CAAR;IACD,CAJH,EAKGC,KALH,CAKSC,CAAC,IAAI;MACVJ,OAAO,CAACC,GAAR,CAAYG,CAAZ;IACD,CAPH;EAQD,CAT4B,EAS1B,EAT0B,CAA7B;EAWAvB,SAAS,CAAC,MAAM;IACd,IAAIO,IAAJ,EAAU;MACRY,OAAO,CAACC,GAAR,CAAY,IAAZ;MACAV,iBAAiB,CAACH,IAAD,CAAjB;IACD;;IACDM,SAAS,CAACL,SAAD,CAAT;EACD,CANQ,EAMN,EANM,CAAT;EAQAR,SAAS,CAAC,MAAM;IACdmB,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBZ,SAAlB;IACAK,SAAS,CAACL,SAAD,CAAT;EACD,CAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;EAKAR,SAAS,CAAC,MAAM;IACd,IAAIO,IAAJ,EAAU;MACR,IAAIiB,CAAJ;MACA,IAAIC,SAAS,GAAG,EAAhB;;MACA,KAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGb,KAAK,CAACe,MAAtB,EAA8BF,CAAC,EAA/B,EAAmC;QACjCC,SAAS,CAACE,IAAV,CAAehB,KAAK,CAACa,CAAD,CAAL,CAASI,GAAxB;MACD;;MACDT,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBK,SAAnB;MACA,IAAIJ,IAAI,GAAG;QACTO,GAAG,EAAErB,IAAI,CAACsB,QADD;QAETrB,SAAS,EAAEiB;MAFF,CAAX;MAIAhB,eAAe,CAACY,IAAD,CAAf;IACD;;IACDF,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBZ,SAAnB;IACAW,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB;EACD,CAhBQ,EAgBN,CAACA,KAAD,CAhBM,CAAT;EAkBA,MAAMmB,QAAQ,GAAGhC,WAAW,CAAC,CAACiC,SAAD,EAAYC,UAAZ,KAA2B;IACtDpB,QAAQ,CAAEqB,SAAD,IACPpC,MAAM,CAACoC,SAAD,EAAY;MAChBC,OAAO,EAAE,CACP,CAACH,SAAD,EAAY,CAAZ,CADO,EAEP,CAACC,UAAD,EAAa,CAAb,EAAgBC,SAAS,CAACF,SAAD,CAAzB,CAFO;IADO,CAAZ,CADA,CAAR;EAQD,CAT2B,EASzB,EATyB,CAA5B;EAUA,MAAMI,UAAU,GAAGrC,WAAW,CAAC,CAACsC,IAAD,EAAOC,KAAP,KAAiB;IAC9C,oBACE,QAAC,OAAD;MAEE,KAAK,EAAEA,KAFT;MAGE,EAAE,EAAED,IAAI,CAACR,GAHX;MAIE,MAAM,EAAEQ,IAAI,CAACE,MAJf;MAKE,IAAI,EAAEF,IAAI,CAACG,KALb;MAME,QAAQ,EAAET;IANZ,GACOM,IAAI,CAACR,GADZ;MAAA;MAAA;MAAA;IAAA,QADF;EAUD,CAX6B,EAW3B,EAX2B,CAA9B;EAaA,oBACE;IAAA,wBACE;MAAK,KAAK,EAAExB,KAAZ;MAAA,UAAoBO,KAAK,CAAC6B,GAAN,CAAU,CAACJ,IAAD,EAAOZ,CAAP,KAAaW,UAAU,CAACC,IAAD,EAAOZ,CAAP,CAAjC;IAApB;MAAA;MAAA;MAAA;IAAA,QADF,EAEGL,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBT,KAAlB,CAFH;EAAA,gBADF;AAOD,CA5EM;;GAAML,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}