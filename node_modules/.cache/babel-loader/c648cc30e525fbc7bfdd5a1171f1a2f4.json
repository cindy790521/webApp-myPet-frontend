{"ast":null,"code":"var _jsxFileName = \"/Users/lintsaiju/Documents/5610/TsaijuLin-FinalProject-myPet/frontend/src/components/Records.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport { BsFillPencilFill, BsFillPlusCircleFill } from \"react-icons/bs\";\nimport \"./Records.css\";\nimport { useSpring, animated } from '@react-spring/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Records = _ref => {\n  _s();\n\n  let {\n    user,\n    records,\n    setRecords,\n    recordList,\n    setRecordList,\n    currentPage,\n    setCurrentPage,\n    entriesPerPage,\n    setEntriesPerPage,\n    getRecords\n  } = _ref;\n  const styles = useSpring({\n    loop: true,\n    to: [{\n      opacity: 1,\n      color: '#ffaaee'\n    }, {\n      opacity: 0,\n      color: 'rgb(14,26,19)'\n    }],\n    from: {\n      opacity: 0,\n      color: 'red'\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Records, \"U224RyuTRdqavojqe0DmYzMtXoU=\", false, function () {\n  return [useSpring];\n});\n\n_c = Records;\nexport default Records;\n\nvar _c;\n\n$RefreshReg$(_c, \"Records\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","Button","Col","Row","Container","Card","BsFillPencilFill","BsFillPlusCircleFill","useSpring","animated","Records","user","records","setRecords","recordList","setRecordList","currentPage","setCurrentPage","entriesPerPage","setEntriesPerPage","getRecords","styles","loop","to","opacity","color","from"],"sources":["/Users/lintsaiju/Documents/5610/TsaijuLin-FinalProject-myPet/frontend/src/components/Records.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport { BsFillPencilFill, BsFillPlusCircleFill } from \"react-icons/bs\";\nimport \"./Records.css\";\nimport { useSpring, animated } from '@react-spring/web';\n\nconst Records = ({\n    user,\n    records,\n    setRecords,\n    recordList,\n    setRecordList,\n    currentPage,\n    setCurrentPage,\n    entriesPerPage,\n    setEntriesPerPage,\n    getRecords\n}) => {\n    const styles = useSpring({\n        loop: true,\n        to: [\n          { opacity: 1, color: '#ffaaee' },\n          { opacity: 0, color: 'rgb(14,26,19)' },\n        ],\n        from: { opacity: 0, color: 'red' },\n      })\n    return (\n        <div className=\"App\">\n            {/* <Container className=\"main-container\">\n                <Row>\n                    <Link to={\"/records/edit\"} >\n                        {BsFillPlusCircleFill}\n                    </Link>\n                </Row>\n                <Row className=\"movieRow\">\n\n                    {records.map((record) => {\n                        return (\n                            <Col key={record._id}>\n                                <Card className=\"moviesListCard\">\n                                    <Card.Body>\n                                        <Card.Title>{record.date}</Card.Title>\n                                        <Card.Text>\n                                            Food:{record.food} g\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Water:{record.water} ml\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Poop:{record.poop} times\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Walk:{record.water} mins\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Vaccine:{record.vaccine}\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Medicine:{record.medicine}\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Grooming:{record.grooming}\n                                        </Card.Text>\n                                        <Card.Text>\n                                            Other:{record.other}\n                                        </Card.Text>\n\n                                        <Link to={\"/records/edit\"} state={{ currentRecord: record }}>\n                                            {BsFillPencilFill}\n                                        </Link>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n\n                        )\n                    })}\n                </Row>\n                <br />\n                Showing page:{currentPage + 1}.\n                <Button\n                    variant=\"link\"\n                    onClick={() => { setCurrentPage(currentPage + 1) }}\n                >\n                    Get next {entriesPerPage} results\n                </Button>\n            </Container> */}\n        </div>\n    )\n}\n\n\nexport default Records;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,gBAAvD;AACA,OAAO,eAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;;;AAEA,MAAMC,OAAO,GAAG,QAWV;EAAA;;EAAA,IAXW;IACbC,IADa;IAEbC,OAFa;IAGbC,UAHa;IAIbC,UAJa;IAKbC,aALa;IAMbC,WANa;IAObC,cAPa;IAQbC,cARa;IASbC,iBATa;IAUbC;EAVa,CAWX;EACF,MAAMC,MAAM,GAAGb,SAAS,CAAC;IACrBc,IAAI,EAAE,IADe;IAErBC,EAAE,EAAE,CACF;MAAEC,OAAO,EAAE,CAAX;MAAcC,KAAK,EAAE;IAArB,CADE,EAEF;MAAED,OAAO,EAAE,CAAX;MAAcC,KAAK,EAAE;IAArB,CAFE,CAFiB;IAMrBC,IAAI,EAAE;MAAEF,OAAO,EAAE,CAAX;MAAcC,KAAK,EAAE;IAArB;EANe,CAAD,CAAxB;EAQA,oBACI;IAAK,SAAS,EAAC;EAAf;IAAA;IAAA;IAAA;EAAA,QADJ;AA8DH,CAlFD;;GAAMf,O;UAYaF,S;;;KAZbE,O;AAqFN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}