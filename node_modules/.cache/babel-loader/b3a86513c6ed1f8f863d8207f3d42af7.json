{"ast":null,"code":"var _jsxFileName = \"/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MovieDataService from '../services/movies';\nimport { useNavigate, Link, useParams } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  let params = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    reviews: []\n  });\n  useEffect(() => {\n    const getMovie = id => {\n      //TODO\n      MovieDataService.getById(id).then(response => {\n        setMovie(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    getMovie(params.id);\n  }, [params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"bigPicture\",\n              src: movie.poster + \"/100px250\",\n              onError: e => {\n                e.target.onerror = null;\n                e.target.src = \"../images/NoPosterAvailable-crop.jpeg\";\n              },\n              fluid: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: movie.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), user && /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/movies/\" + params.id + \"/review\",\n                children: \"Add Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), movie.reviews.map((review, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink-0 reviewsText\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [review.name + \" reviewed on \", moment(review.date).format(\"Do MMMM YYYY\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"review\",\n                  children: review.review\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 41\n                }, this), user && user.googleId === review.user_id && /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: {\n                        pathname: \"/movies/\" + params.id + \"/review\"\n                      },\n                      state: {\n                        currentReview: review\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      onClick: () => {\n                        //TODO:Implement delete behavior\n                        var data = {\n                          user_id: user.googleId,\n                          review_id: review._id\n                        };\n                        MovieDataService.deleteReview(data).then(response => {\n                          setMovie(prevState => {\n                            prevState.reviews.splice(index, 1);\n                            return { ...prevState\n                            };\n                          });\n                          setMovie(movie);\n                          navigate(\"/movies/\" + params.id);\n                        }).catch(e => {\n                          console.log(e);\n                        });\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movie, \"r2FgCUe0enydwgK7X+6TBQVICCE=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","MovieDataService","useNavigate","Link","useParams","Card","Container","Image","Col","Row","Button","moment","Movie","user","params","navigate","movie","setMovie","id","title","rated","reviews","getMovie","getById","then","response","data","catch","e","console","log","poster","target","onerror","src","plot","map","review","index","name","date","format","googleId","user_id","pathname","currentReview","review_id","_id","deleteReview","prevState","splice"],"sources":["/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Movie.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieDataService from '../services/movies';\nimport { useNavigate, Link, useParams } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\n\n\n\nconst Movie = ({ user }) => {\n\n    let params = useParams();\n    const navigate = useNavigate();\n\n    const [movie, setMovie] = useState({\n        id: null,\n        title: \"\",\n        rated: \"\",\n        reviews: []\n    });\n\n    useEffect(() => {\n        const getMovie = id => {\n            //TODO\n            MovieDataService.getById(id)\n                .then(response => {\n                    setMovie(response.data);\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n        }\n        getMovie(params.id)\n    }, [params.id]);\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"poster\">\n                            <Image\n                                className=\"bigPicture\"\n                                src={movie.poster + \"/100px250\"}\n                                onError={(e) => {\n                                    e.target.onerror = null;\n                                    e.target.src = \"../images/NoPosterAvailable-crop.jpeg\"\n                                }}\n                                fluid />\n                        </div>\n                    </Col>\n                    <Col>\n                        <Card>\n                            <Card.Header as=\"h5\">{movie.title}</Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    {movie.plot}\n                                </Card.Text>\n                                {user &&\n                                    <Link to={\"/movies/\" + params.id + \"/review\"}>\n                                        Add Review\n                                    </Link>}\n                            </Card.Body>\n                        </Card>\n                        <h2>Reviews</h2>\n                        <br></br>\n                        {movie.reviews.map((review, index) => {\n                            return (\n                                <div className=\"d-flex\">\n                                    <div className=\"flex-shrink-0 reviewsText\">\n                                        <h5>{review.name + \" reviewed on \"}{moment(review.date).format(\"Do MMMM YYYY\")}</h5>\n                                        <p className=\"review\">{review.review}</p>\n                                        {user && user.googleId === review.user_id &&\n                                            <Row>\n                                                <Col>\n                                                    <Link to={{\n                                                        pathname: \"/movies/\" + params.id + \"/review\"\n                                                    }}\n                                                        state={{\n                                                            currentReview: review\n                                                        }}\n                                                    >\n                                                        Edit\n                                                    </Link>\n                                                </Col>\n                                                <Col>\n                                                    <Button variant=\"link\" onClick={() => {\n                                                        //TODO:Implement delete behavior\n                                                        var data = {\n                                                            user_id: user.googleId,\n                                                            review_id: review._id\n                                                        }\n                                                        MovieDataService.deleteReview(data)\n                                                            .then(response => {\n                                                                setMovie((prevState) => {\n                                                                    prevState.reviews.splice(index, 1);\n                                                                    return ({\n                                                                        ...prevState\n                                                                    })\n                                                                })\n                                                                setMovie(movie);\n                                                                navigate(\"/movies/\" + params.id);\n                                                            })\n                                                            .catch(e => {\n                                                                console.log(e);\n                                                            });\n                                                    }\n                                                    }>\n                                                        Delete\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module"}