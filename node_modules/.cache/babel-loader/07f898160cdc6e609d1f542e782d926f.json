{"ast":null,"code":"var _jsxFileName = \"/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport { useCallback, useState, useEffect } from 'react';\nimport { DnDCard } from './DnDCard.js';\nimport MovieDataService from \"../services/movies\";\nimport FavoriteDataService from \"../services/favorites\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 400\n}; // export const Container = ({user,uploadFavorites,favorites,retreiveFavorites}) => {\n\nexport const Container = _ref => {\n  _s();\n\n  let {\n    user,\n    uploadFavorites\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  const getMovies = ids => {\n    //TODO\n    MovieDataService.getFavoritesMovies(ids.toString()).then(response => {\n      let i;\n\n      for (i = 0; i < newFavIds.length; i++) {\n        if (newFavIds[i] != response.data._id) {\n          setCards(response.data);\n        }\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const retreiveFavorites = useCallback(user => {\n    var data = {\n      user_id: user.googleId\n    };\n    FavoriteDataService.getFavorites(data.user_id).then(response => {\n      console.log(\"@@\");\n      setFavorites(response.data.favorites);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []); // useEffect(() => {\n  //   if(user){\n  //   retreiveFavorites(user);}\n  // },[]);\n\n  useEffect(() => {\n    if (user) {\n      retreiveFavorites(user);\n    }\n\n    console.log(\"1\", favorites);\n    getMovies(favorites);\n  }, []);\n  useEffect(() => {\n    console.log(\"++\", favorites);\n    getMovies(favorites);\n  }, [favorites]);\n  useEffect(() => {\n    let i;\n    let newFavIds = [];\n\n    for (i = 0; i < cards.length; i++) {\n      newFavIds.push(cards[i]._id);\n    }\n\n    console.log(\"new\", newFavIds);\n    let data = {\n      _id: user.googleId,\n      favorites: newFavIds\n    };\n    uploadFavorites(data);\n\n    if (favorites != newFavIds) {\n      setFavorites(newFavIds);\n    }\n  }, [cards]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n  }, []);\n  const renderCard = useCallback((card, index) => {\n    return /*#__PURE__*/_jsxDEV(DnDCard, {\n      index: index,\n      id: card._id,\n      text: card.title,\n      moveCard: moveCard\n    }, card._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), console.log(\"cards\", cards)]\n  }, void 0, true);\n};\n\n_s(Container, \"OE2C74qF466+utJKE6zqlZAgUVU=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","useCallback","useState","useEffect","DnDCard","MovieDataService","FavoriteDataService","style","width","Container","user","uploadFavorites","cards","setCards","favorites","setFavorites","getMovies","ids","getFavoritesMovies","toString","then","response","i","newFavIds","length","data","_id","catch","e","console","log","retreiveFavorites","user_id","googleId","getFavorites","push","moveCard","dragIndex","hoverIndex","prevCards","$splice","renderCard","card","index","title","map"],"sources":["/Users/lintsaiju/Documents/5610/MERN Stack Application Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport { useCallback, useState, useEffect } from 'react'\nimport  {DnDCard}  from './DnDCard.js'\nimport MovieDataService from \"../services/movies\";\nimport FavoriteDataService from \"../services/favorites\";\n\nconst style = {\n  width: 400,\n};\n// export const Container = ({user,uploadFavorites,favorites,retreiveFavorites}) => {\n  export const Container = ({user,uploadFavorites}) => {\n    \n  const [cards, setCards] = useState([]);\n  const [favorites,setFavorites]=useState([]);\n\n  const getMovies=ids=>{\n    //TODO\n    \n    MovieDataService.getFavoritesMovies(ids.toString())\n    .then(response=>{\n      let i;\n      for (i=0;i<newFavIds.length;i++){\n      if (newFavIds[i]!=response.data._id){\n      setCards (response.data);}\n    }})\n    .catch(e=>{\n        console.log(e);\n    })\n}\n\nconst retreiveFavorites=useCallback((user)=>{\n  var data={\n    user_id:user.googleId\n  }\n  \n  FavoriteDataService.getFavorites(data.user_id)\n  .then(response=>{\n    console.log(\"@@\");\n    setFavorites(response.data.favorites);\n  })\n  .catch(e=>{\n      console.log(e);\n  });\n},[]);\n\n// useEffect(() => {\n//   if(user){\n//   retreiveFavorites(user);}\n// },[]);\n\n  useEffect(() => {\n    if(user){\n        retreiveFavorites(user);}\n    console.log(\"1\",favorites)\n    getMovies(favorites);\n  },[]);\n\n  useEffect(() => {\n    \n  console.log(\"++\",favorites) \n    getMovies(favorites);\n  },[favorites]);\n  \n  useEffect(() => {\n    let i;\n    let newFavIds=[];\n    \n    for(i=0;i<cards.length;i++){\n      newFavIds.push(cards[i]._id);\n    }\n    console.log(\"new\",newFavIds);\n    let data={\n      _id:user.googleId,\n      favorites:newFavIds\n    };\n    uploadFavorites(data);\n    if(favorites!=newFavIds){\n    setFavorites(newFavIds);}\n\n  },[cards]);\n\n    \n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards((prevCards) =>\n        update(prevCards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, prevCards[dragIndex]],\n          ],\n        }),\n      )\n    }, [])\n    const renderCard = useCallback((card, index) => {\n      return (\n        <DnDCard\n          key={card._id}\n          index={index}\n          id={card._id}\n          text={card.title}\n          moveCard={moveCard}\n        />\n      )\n    }, []);\n\n    return (\n      <>\n        <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n         {console.log(\"cards\",cards)}\n      </>\n    )\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}